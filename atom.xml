<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Wright Access</title>
    <link href="http://dpwright.com/atom.xml" rel="self" />
    <link href="http://dpwright.com" />
    <id>http://dpwright.com/atom.xml</id>
    <author>
        <name>Daniel P. Wright</name>
        <email>dani@dpwright.com</email>
    </author>
    <updated>2018-11-10T16:00:00Z</updated>
    <entry>
    <title>Fabellae Latinae Capitulum V</title>
    <link href="http://dpwright.com/posts/2018/11/10/fabellae-latinae-capitulum-v/index.html" />
    <id>http://dpwright.com/posts/2018/11/10/fabellae-latinae-capitulum-v/index.html</id>
    <published>2018-11-10T16:00:00Z</published>
    <updated>2018-11-10T16:00:00Z</updated>
    <summary type="html"><![CDATA[

<div class="info">10 November, 2018</div>

<div class="sidenote">
This is an extract from <em><a href="https://www.hackettpublishing.com/pdfs/FabellaeLatinae_2016_HansOrberg.pdf">Fabellae Latinae</a></em>, the freely downloadable companion text to Hans H. Ørberg’s excellent series, <em><a href="https://www.hackettpublishing.com/lingua-latina-per-se-illustrata-series">Lingua Latina</a></em>. It is also available in podcast form on <a href="https://itunes.apple.com/us/podcast/fabellae-latinae/id1439859681">iTunes</a>, <a href="https://play.google.com/music/m/Iejungfyafunuhg4ehuhrfjerdq?t=Fabellae_Latinae">Google Play Music</a>, or by searching for “Fabellae Latinae” / subscribing to <a href="https://s3.amazonaws.com/fabellaelatinae/feed.rss">this RSS feed</a>.
</div>
<center>
<audio controls preload="none">
<source src="https://s3.amazonaws.com/fabellaelatinae/capitula/05-LiberNovus.mp3" type="audio/mpeg" />
</audio>
</center>
<p>Cornēlius est dominus Rōmānus, quī in oppidō Tūsculō habitat. Cornēlius duōs līberōs habet, Sextum fīlium et Cornēliam fīliam, et decem tantum servōs. Paucī sunt servī Cornēliī, quia Cornēlius nōn magnam pecūniam habet. Neque magnam vīllam habet Cornēlius, sed multōs librōs Latīnōs et Graecōs habet. Cornēlius est dominus quī librōs et litterās amat. Bonī et pulchrī librī eum dēlectant. Etiam Sextus, fīlius Cornēliī, librōs et litterās amat.</p>
<p>Cornēlius suum Libanum servum vocat: “Venī, Libane!”</p>
<p>Libanus venit et dominum salūtat: “Salvē, domine! Ecce, servus tuus adest.”</p>
<p>Cornēlius salūtat servum suum: “Salvē, Libane! Tacē et audī!”</p>
<p>Servus tacet et audit.</p>
<p>Cornēlius eum interrogat: “Ubi est liber meus novus? Cūr hīc in mēnsā nōn est?”</p>
<p>Libanus tacet neque respondet.</p>
<p>Cornēlius imperat: “Respondē, serve!”</p>
<p>Libanus: “Nōn mē, sed fīlium tuum interrogā!”</p>
<p>Cornēlius: “Quid?”</p>
<p>Libanus: “Liber tuus novus est in cubiculō Sextī. Is habet librum tuum.”</p>
<p>Cornēlius: “Quid agit puer cum librō meō?”</p>
<p>In cubiculō suō Sextus habet librum Cornēliī novum. Titulus librī est <span style="font-variant: small-caps;">grammatica latina</span>.</p>
<p>Sextus Cornēliam vocat: “Venī, Cornēlia! Ecce liber novus. Titulus eius est <span style="font-variant: small-caps;">grammatica latina</span>. In librō multa capitula sunt. Titulus capitulī prīmī est <span style="font-variant:
small-caps;">litterae et syllabae</span>. Ecce litterae Latīnae in pāginā prīmā: <span style="font-variant: small-caps;">a</span>, <span style="font-variant: small-caps;">b</span>, <span style="font-variant:
small-caps;">c</span>, <span style="font-variant: small-caps;">d</span>, <span style="font-variant: small-caps;">e</span>, cēterae. Iam respondē, Cornēlia: quot litterae sunt in vocābulō <span style="font-variant:
small-caps;">latina</span>?”</p>
<p>Cornēlia litterās numerat: “Ūna, duae, trēs, quattuor, quīnque, sex. In vocābulō <span style="font-variant: small-caps;">latina</span> sunt sex litterae: <span style="font-variant: small-caps;">l</span>, <span style="font-variant: small-caps;">a</span>, <span style="font-variant:
small-caps;">t</span>, <span style="font-variant: small-caps;">i</span>, <span style="font-variant: small-caps;">n</span>, <span style="font-variant:
small-caps;">a</span>.”</p>
<p>Sextus: “Et quot syllabae?”</p>
<p>Cornēlia: “Trēs: syllaba prīma <span style="font-variant:
small-caps;">la</span>, secunda <span style="font-variant:
small-caps;">ti</span>, tertia <span style="font-variant:
small-caps;">na</span>.”</p>
<p>Sextus rūrsus eam interrogat: “Vocābulum <span style="font-variant:
small-caps;">grammatica</span> quot litterās habet?”</p>
<p>Cornēlia litterās numerat et respondet: “Decem.”</p>
<p>Sextus: “Et quot syllabās?”</p>
<p>Cornēlia: “<span style="font-variant: small-caps;">gram</span>-<span style="font-variant: small-caps;">ma-</span><span style="font-variant:
small-caps;">ti-</span><span style="font-variant: small-caps;">ca</span>: quattuor syllabās habet.”</p>
<p>Cornēlius fīlium suum vocat: “Sexte, venī!”</p>
<p>Sextus pāret: ex cubiculō venit cum librō Cornēliī.</p>
<p>Pater īrātus fīlium interrogat: “Estne liber meus novus in cubiculō tuō?”</p>
<p>Sextus librum in mēnsā pōnit: “Nōn est in cubiculō meō. Ecce liber tuus in mēnsā tuā!”</p>
<p>Iam Cornēlius rīdet neque īrātus est. Pater, quem librī et litterae dēlectant, laetus est quia etiam fīlius librōs et litterās amat.</p>

<div class="tagsinfo"><a href="/tags/latin/index.html">latin</a>, <a href="/tags/fabellae-latinae/index.html">fabellae-latinae</a>, <a href="/tags/llpsi/index.html">llpsi</a>, <a href="/tags/podcasts/index.html">podcasts</a></div>
]]></summary>
</entry>
<entry>
    <title>Fabellae Latinae Capitulum IV</title>
    <link href="http://dpwright.com/posts/2018/11/03/fabellae-latinae-capitulum-iv/index.html" />
    <id>http://dpwright.com/posts/2018/11/03/fabellae-latinae-capitulum-iv/index.html</id>
    <published>2018-11-03T14:00:00Z</published>
    <updated>2018-11-03T14:00:00Z</updated>
    <summary type="html"><![CDATA[

<div class="info"> 3 November, 2018</div>

<div class="sidenote">
This is an extract from <em><a href="https://www.hackettpublishing.com/pdfs/FabellaeLatinae_2016_HansOrberg.pdf">Fabellae Latinae</a></em>, the freely downloadable companion text to Hans H. Ørberg’s excellent series, <em><a href="https://www.hackettpublishing.com/lingua-latina-per-se-illustrata-series">Lingua Latina</a></em>. It is also available in podcast form on <a href="https://itunes.apple.com/us/podcast/fabellae-latinae/id1439859681">iTunes</a>, <a href="https://play.google.com/music/m/Iejungfyafunuhg4ehuhrfjerdq?t=Fabellae_Latinae">Google Play Music</a>, or by searching for “Fabellae Latinae” / subscribing to <a href="https://s3.amazonaws.com/fabellaelatinae/feed.rss">this RSS feed</a>.
</div>
<center>
<audio controls preload="none">
<source src="https://s3.amazonaws.com/fabellaelatinae/capitula/04-NummusDavi.mp3" type="audio/mpeg" />
</audio>
</center>
<p>Aemilia, quae virum suum nōn videt, Dāvum interrogat: “Ubi est vir meus? Cūr nōn venit?”</p>
<p>Dāvus audit dominum, quī Mēdum vocat: “Venī, Mēde! Venī, improbe serve!”</p>
<p>Dāvus: “Audī! Dominus Mēdum vocat, sed Mēdus abest neque venit.”</p>
<p>Aemilia: “Mēdus nōn venit quia pecūniam dominī suī habet. Is servus improbus est! Sed ecce venit vir meus.”</p>
<p>Aemilia laeta est, quia Iūlius venit. Is īrātus est, et sacculum suum in mēnsā pōnit.</p>
<p>Iūlius: “Ecce sacculus meus. Iam nōn centum, sed tantum decem nummī in sacculō meō sunt. Cēterī nummī meī sunt in sacculō Mēdī!” Dominus suum Mēdum servum accūsat.</p>
<p>Aemilia: “Nōn decem, sed tantum novem sunt nummī in sacculō tuō.”</p>
<p>Iūlius pecūniam numerat: “Ūnus, duo, trēs, quattuor, quīnque, sex, septem, octō, novem. Quid? Novem tantum? Cūr ūnus nummus abest?”</p>
<p>Aemilia: “Quia in sacculō Dāvī est, neque tuus, sed Dāvī est nummus. Ecce Dāvus adest. Is nūllum tuum nummum habet. Nōn Dāvum, sed Mēdum accūsā!”</p>
<p>Dāvus: “Ecce parvus sacculus meus, domine. In sacculō ūnus est nummus, quī meus est.”</p>
<p>Iūlius: “Ō Dāve, nummum habē, bone serve! Nōn meus, sed tuus est. Sūme sacculum tuum et discēde!”</p>
<p>Rīdet Aemilia. Iam Iūlius quoque rīdet neque Dāvum, servum probum, accūsat.</p>
<p>Dāvus sacculum suum sūmit et discēdit.</p>
<p>Iūlius: “Probus servus est Dāvus, eius est pecūnia quae in sacculō eius est. Sed mea est pecūnia quae est in sacculō Mēdī!”</p>

<div class="tagsinfo"><a href="/tags/latin/index.html">latin</a>, <a href="/tags/fabellae-latinae/index.html">fabellae-latinae</a>, <a href="/tags/llpsi/index.html">llpsi</a>, <a href="/tags/podcasts/index.html">podcasts</a></div>
]]></summary>
</entry>
<entry>
    <title>Fabellae Latinae Capitulum III</title>
    <link href="http://dpwright.com/posts/2018/10/28/fabellae-latinae-capitulum-iii/index.html" />
    <id>http://dpwright.com/posts/2018/10/28/fabellae-latinae-capitulum-iii/index.html</id>
    <published>2018-10-28T21:07:20Z</published>
    <updated>2018-10-28T21:07:20Z</updated>
    <summary type="html"><![CDATA[

<div class="info">28 October, 2018</div>

<div class="sidenote">
This is an extract from <em><a href="https://www.hackettpublishing.com/pdfs/FabellaeLatinae_2016_HansOrberg.pdf">Fabellae Latinae</a></em>, the freely downloadable companion text to Hans H. Ørberg’s excellent series, <em><a href="https://www.hackettpublishing.com/lingua-latina-per-se-illustrata-series">Lingua Latina</a></em>. It is also available in podcast form on <a href="https://itunes.apple.com/us/podcast/fabellae-latinae/id1439859681">iTunes</a>, <a href="https://play.google.com/music/m/Iejungfyafunuhg4ehuhrfjerdq?t=Fabellae_Latinae">Google Play Music</a>, or by searching for “Fabellae Latinae” / subscribing to <a href="https://s3.amazonaws.com/fabellaelatinae/feed.rss">this RSS feed</a>.
</div>
<center>
<audio controls preload="none">
<source src="https://s3.amazonaws.com/fabellaelatinae/capitula/03-PaterDormit.mp3" type="audio/mpeg" />
</audio>
</center>
<p>Iūlia, fīlia Iūliī et Aemiliae, est parva puella laeta quae cantat et rīdet. Sed iam nōn cantat puella neque rīdet, sed plōrat: “Uhuhū!” Cūr plōrat Iūlia? Puella plōrat quia Mārcus eam pulsat. Mārcus est puer improbus quī parvam puellam pulsat − et rīdet!</p>
<p>Aemilia audit fīliam quae plōrat.</p>
<p>Iūlia Iūlium vocat: “Pater! Pa-ater!”</p>
<p>Māter fīliam audit, neque pater eam audit.</p>
<p>Aemilia Iūlium nōn videt et Syram ancillam interrogat: “Ubi est vir meus? Iūlia eum vocat. Cūr nōn venit?”</p>
<p>Syra: “Dominus dormit.”</p>
<p>Aemilia: “Ō! Fīlia plōrat − et pater dormit!”</p>
<p>Iūlia: “Uhuhū! Mārcus mē pulsat!”</p>
<p>Mārcus rīdet: “Hahahae!”</p>
<p>Pater audit fīliam quae plōrat et fīlium quī rīdet. Iam nōn dormit Iūlius.</p>
<p>Iūlius venit et Aemiliam interrogat: “Cūr Iūlia plōrat et Mārcus rīdet?”</p>
<p>Aemilia respondet: “Mārcus rīdet, quia Iūlia plōrat, et Iūlia plōrat et tē vocat, quia Mārcus eam pulsat. Puer improbus est Mārcus!”</p>
<p>Iūlius Mārcum vocat. Mārcus venit et Iūlium īrātum videt, neque iam rīdet puer. Pater īrātus fīlium improbum verberat!</p>
<p>Iam nōn Iūlia, sed Mārcus plōrat.</p>

<div class="tagsinfo"><a href="/tags/latin/index.html">latin</a>, <a href="/tags/fabellae-latinae/index.html">fabellae-latinae</a>, <a href="/tags/llpsi/index.html">llpsi</a>, <a href="/tags/podcasts/index.html">podcasts</a></div>
]]></summary>
</entry>
<entry>
    <title>Fabellae Latinae Capitulum II</title>
    <link href="http://dpwright.com/posts/2018/10/21/fabellae-latinae-capitulum-ii/index.html" />
    <id>http://dpwright.com/posts/2018/10/21/fabellae-latinae-capitulum-ii/index.html</id>
    <published>2018-10-21T16:44:20Z</published>
    <updated>2018-10-21T16:44:20Z</updated>
    <summary type="html"><![CDATA[

<div class="info">21 October, 2018</div>

<div class="sidenote">
This is an extract from <em><a href="https://www.hackettpublishing.com/pdfs/FabellaeLatinae_2016_HansOrberg.pdf">Fabellae Latinae</a></em>, the freely downloadable companion text to Hans H. Ørberg’s excellent series, <em><a href="https://www.hackettpublishing.com/lingua-latina-per-se-illustrata-series">Lingua Latina</a></em>. It is also available in podcast form on <a href="https://itunes.apple.com/us/podcast/fabellae-latinae/id1439859681">iTunes</a>, <a href="https://play.google.com/music/m/Iejungfyafunuhg4ehuhrfjerdq?t=Fabellae_Latinae">Google Play Music</a>, or by searching for “Fabellae Latinae” / subscribing to <a href="https://s3.amazonaws.com/fabellaelatinae/feed.rss">this RSS feed</a>.
</div>
<center>
<audio controls preload="none">
<source src="https://s3.amazonaws.com/fabellaelatinae/capitula/02-LiberiEtLibri.mp3" type="audio/mpeg" />
</audio>
</center>
<p>Quid est Tūsculum? Tūsculum est oppidum Rōmānum. Estne magnum oppidum? Tūsculum nōn magnum, sed parvum oppidum est. Ubi est Tūsculum? Tūsculum est in Italiā.</p>
<p>Quis est Iūlius? Iūlius est vir Rōmānus. Cuius vir est? Vir Aemiliae est. Ubi est Iūlius? Est in oppidō Tūsculō. Estne Aemilia in oppidō? Nōn est.</p>
<p>Cornēlius: “Ubi est vir tuus, Aemilia?”</p>
<p>Aemilia: “Iūlius, vir meus, in oppidō Tūsculō est. Sed ecce Mārcus, fīlius meus, et Dēlia.” Cornēlius: “Quae est Dēlia?”</p>
<p>Aemilia: “Dēlia ancilla mea est.”</p>
<p>Cornēlius: “Estne Syra quoque ancilla tua?”</p>
<p>Aemilia: “Dēlia et Syra et cēterae multae sunt ancillae meae. In familiā meā sunt multae ancillae multīque servī − et paucī līberī.”</p>
<p>Cornēlius: “Quot līberī in familiā tuā sunt?”</p>
<p>Aemilia: “Trēs.”</p>
<p>Cornēlius: “Quot fīliī et quot fīliae?”</p>
<p>Aemilia: “Duo fīliī et ūna fīlia. Fīliī meī sunt Mārcus et Quīntus, fīlia mea est Iūlia. In familiā meā sunt centum servī et trēs līberī.”</p>
<p>Cornēlius: “Centum est magnus numerus! In meā familiā parvus numerus servōrum est. Neque magnus est numerus līberōrum meōrum.”</p>
<p>Aemilia: “Quot sunt līberī tuī?”</p>
<p>Cornēlius: “Duo: ūnus fīlius, Sextus, et ūna fīlia, Cornēlia. Parvus est numerus <em>līberōrum</em> − sed numerus <em>librōrum</em> meōrum nōn parvus est! Librī meī sunt magnī et parvī, antīquī novīque: centum librī Latīnī et Graecī.”</p>
<p>Aemilia: “Centum librī! Magnus est numerus librōrum tuōrum!”</p>
<p>Cornēlius: “Ecce liber meus novus; titulus librī est <span style="font-variant:
small-caps;">grammatica latina</span>.”</p>
<p><em>Līberī</em> et <em>liber</em> duo vocābula masculīna sunt. <em>Līberī</em> est plūrālis, <em>liber</em> singulāris − plūrālis: <em>librī</em>.</p>

<div class="tagsinfo"><a href="/tags/latin/index.html">latin</a>, <a href="/tags/fabellae-latinae/index.html">fabellae-latinae</a>, <a href="/tags/llpsi/index.html">llpsi</a>, <a href="/tags/podcasts/index.html">podcasts</a></div>
]]></summary>
</entry>
<entry>
    <title>Fabellae Latinae Capitulum I</title>
    <link href="http://dpwright.com/posts/2018/10/13/fabellae-latinae-capitulum-i/index.html" />
    <id>http://dpwright.com/posts/2018/10/13/fabellae-latinae-capitulum-i/index.html</id>
    <published>2018-10-13T12:28:20Z</published>
    <updated>2018-10-13T12:28:20Z</updated>
    <summary type="html"><![CDATA[

<div class="info">13 October, 2018</div>

<div class="sidenote">
This is an extract from <em><a href="https://www.hackettpublishing.com/pdfs/FabellaeLatinae_2016_HansOrberg.pdf">Fabellae Latinae</a></em>, the freely downloadable companion text to Hans H. Ørberg’s excellent series, <em><a href="https://www.hackettpublishing.com/lingua-latina-per-se-illustrata-series">Lingua Latina</a></em>. It is also available in podcast form on <a href="https://itunes.apple.com/us/podcast/fabellae-latinae/id1439859681">iTunes</a>, <a href="https://play.google.com/music/m/Iejungfyafunuhg4ehuhrfjerdq?t=Fabellae_Latinae">Google Play Music</a>, or by searching for “Fabellae Latinae” / subscribing to <a href="https://s3.amazonaws.com/fabellaelatinae/feed.rss">this RSS feed</a>.
</div>
<center>
<audio controls preload="none">
<source src="https://s3.amazonaws.com/fabellaelatinae/capitula/01-ProvinciaeRomanae.mp3" type="audio/mpeg" />
</audio>
</center>
<p>In imperiō Rōmānō multae sunt prōvinciae. Hispānia et Gallia sunt prōvinciae Rōmānae. Britannia quoque prōvincia Rōmāna est. Hispānia et Gallia et Britannia trēs prōvinciae in Eurōpā sunt. Ubi sunt prōvinciae Syria et Aegyptus? Syria in Asiā est, Aegyptus est in Āfricā. Britannia īnsula est. Num īnsulae sunt Gallia et Hispānia? Nōn sunt īnsulae; sed Corsica, Sardinia, Sicilia īnsulae sunt. Magna īnsula est Britannia. Sicilia quoque et Sardinia et Corsica magnae sunt īnsulae. Melita īnsula parva est.</p>
<p>Quid est Brundisium? Brundisium oppidum est. Quid est Dānuvius? Dānuvius est fluvius. Rhēnus quoque fluvius est. Rhēnus et Dānuvius sunt duo magnī fluviī in Eurōpā. Nīlus quoque magnus fluvius est. Estne Nīlus in Eurōpā? Nōn in Eurōpā, sed in Āfricā est Nīlus. Num Rhodus fluvius est? Nōn fluvius, sed īnsula est. Rhodus est īnsula Graeca. In Graeciā multae sunt īnsulae parvae et magnae.</p>
<p><span style="font-variant: small-caps;">insvla</span> et <span style="font-variant: small-caps;">oppidvm</span> vocābula Latīna sunt. In vocābulō <span style="font-variant: small-caps;">insvla</span> sunt sex litterae: littera prīma <span style="font-variant: small-caps;">i</span>, secunda <span style="font-variant: small-caps;">n</span>, tertia <span style="font-variant: small-caps;">s</span>… <span style="font-variant:
small-caps;">i</span> est littera et numerus. Numerī prīmī sunt <span style="font-variant: small-caps;">i</span>, <span style="font-variant:
small-caps;">ii</span>, <span style="font-variant: small-caps;">iii</span>, litterae prīmae <span style="font-variant: small-caps;">a</span>, <span style="font-variant: small-caps;">b</span>, <span style="font-variant:
small-caps;">c</span>.</p>

<div class="tagsinfo"><a href="/tags/latin/index.html">latin</a>, <a href="/tags/fabellae-latinae/index.html">fabellae-latinae</a>, <a href="/tags/llpsi/index.html">llpsi</a>, <a href="/tags/podcasts/index.html">podcasts</a></div>
]]></summary>
</entry>
<entry>
    <title>Graphical log with vim-fugitive</title>
    <link href="http://dpwright.com/posts/2018/04/06/graphical-log-with-vimfugitive/index.html" />
    <id>http://dpwright.com/posts/2018/04/06/graphical-log-with-vimfugitive/index.html</id>
    <published>2018-04-06T20:43:00Z</published>
    <updated>2018-04-06T20:43:00Z</updated>
    <summary type="html"><![CDATA[

<div class="info"> 6 April, 2018</div>

<p>Tim Pope’s excellent <a href="https://github.com/tpope/vim-fugitive"><code>vim-fugitive</code></a> is the best interface I’ve encountered for working with git. I love using <code>:Gdiff</code> not just to compare changes, but to stage and unstage hunks to the index, looking up the origin of a particular change with <code>:Gblame</code>, and being able to fetch, merge, and commit changes from within the editor.</p>
<p>One feature I miss from other tools, however, is an easy way to browse the history of the repository as a whole, rather than on a file-by-file basis. <code>:Glog</code> loads the history of the current file into the change list, which is a great way to see the changes to that file over time, but the changes are limited to a single file. You can use <code>:Glog --</code> to load the history of the entire repository, but it will still get loaded as a single, flat list, and since it is now much longer it can be quite unwieldy to navigate.</p>
<p>I have long had the following line in my git aliases, which displays a nicely-formatted graph of the repository:</p>
<div class="elastic-tabstops">
<table>
<colgroup>
<col width="0%" />
<col width="100%" />
</colgroup>
<tbody>
<tr class="odd">
<td align="left"><div class="sourceCode"><pre class="sourceCode ini"><code class="sourceCode ini"></code></pre></div></td>
<td align="left"><div class="sourceCode"><pre class="sourceCode ini"><code class="sourceCode ini"><span class="dt">lg </span><span class="ot">=</span><span class="st"> log --graph --pretty=format:&#39;%Cred%h%Creset - %Cgreen(%ad)%C(yellow)%d%Creset %s %C(bold blue)&lt;%an&gt;%Creset&#39; --abbrev-commit --date=local</span></code></pre></div></td>
</tr>
</tbody>
</table>
</div>
<p>I can’t remember where I originally copied this from. It looks very similar to <a href="https://coderwall.com/p/euwpig/a-better-git-log">this one</a>, although the date is at the start, and absolute rather than relative. Perhaps I customised it. This is the output it produces:</p>
<center>
<img src="/posts/2018/04/06/graphical-log-with-vimfugitive/git-lg.png" title="Output of the git-lg command" />
</center>
<p>I’ve always liked this visualisation, but one problem with it is that it’s pretty static—you just get the list of commits, with no way to “select” a commit and see its contents. For this, I’ve tended to use <a href="https://github.com/jonas/tig"><code>tig</code></a>, or some graphical git client like <code>gitk</code>. I don’t find <code>tig</code> nearly as readable as <code>git lg</code>, though, and having to switch to a whole graphical client just to read the log feels like overkill. And, apart from anything else, what I usually want to do once I’ve <em>found</em> the commit I’m interested in is to edit it in vim!</p>
<p>Well, it turns out it’s easy to get this integrated into vim using fugitive. As a first pass, I simply created a <code>Glg</code> command by adding the following to my <code>.vimrc</code>:</p>
<div class="elastic-tabstops">
<table>
<colgroup>
<col width="100%" />
</colgroup>
<tbody>
<tr class="odd">
<td align="left"><pre><code>command -nargs=* Glg Git! log --graph --pretty=format:&#39;\%h - (\%ad)\%d \%s &lt;\%an&gt;&#39; --abbrev-commit --date=local &lt;args&gt;</code></pre></td>
</tr>
</tbody>
</table>
</div>
<p>Alternatively if you already have the <code>git lg</code> alias set up in your <code>.gitconfig</code> you can just call that:</p>
<div class="elastic-tabstops">
<table>
<colgroup>
<col width="100%" />
</colgroup>
<tbody>
<tr class="odd">
<td align="left"><pre><code>command -nargs=* Glg Git! lg &lt;args&gt;</code></pre></td>
</tr>
</tbody>
</table>
</div>
<p>This gives us the graph visualisation we want, but some syntax highlighting would be nice. Fugitive’s <code>:Git!</code> command sets the filetype of the output buffer to <code>git</code>, so I created the file <code>~/.vim/after/syntax/git.vim</code> and added the following highlighting rules to it.</p>
<div class="elastic-tabstops">
<table>
<colgroup>
<col width="0%" />
<col width="100%" />
</colgroup>
<tbody>
<tr class="odd">
<td align="left"><pre><code>syn match gitLgLine     </code></pre></td>
<td align="left"><pre><code>/^[_\*|\/\\ ]\+\(\&lt;\x\{4,40\}\&gt;.*\)\?$/</code></pre></td>
</tr>
<tr class="even">
<td align="left"><pre><code>syn match gitLgHead     </code></pre></td>
<td align="left"><pre><code>/^[_\*|\/\\ ]\+\(\&lt;\x\{4,40\}\&gt; - ([^)]\+)\( ([^)]\+)\)\? \)\?/ contained containedin=gitLgLine</code></pre></td>
</tr>
<tr class="odd">
<td align="left"><pre><code>syn match gitLgDate     </code></pre></td>
<td align="left"><pre><code>/(\u\l\l \u\l\l \d\=\d \d\d:\d\d:\d\d \d\d\d\d)/ contained containedin=gitLgHead nextgroup=gitLgRefs skipwhite</code></pre></td>
</tr>
<tr class="even">
<td align="left"><pre><code>syn match gitLgRefs     </code></pre></td>
<td align="left"><pre><code>/([^)]*)/ contained containedin=gitLgHead</code></pre></td>
</tr>
<tr class="odd">
<td align="left"><pre><code>syn match gitLgGraph    </code></pre></td>
<td align="left"><pre><code>/^[_\*|\/\\ ]\+/ contained containedin=gitLgHead,gitLgCommit nextgroup=gitHashAbbrev skipwhite</code></pre></td>
</tr>
<tr class="even">
<td align="left"><pre><code>syn match gitLgCommit   </code></pre></td>
<td align="left"><pre><code>/^[^-]\+- / contained containedin=gitLgHead nextgroup=gitLgDate skipwhite</code></pre></td>
</tr>
<tr class="odd">
<td align="left"><pre><code>syn match gitLgIdentity </code></pre></td>
<td align="left"><pre><code>/&lt;[^&gt;]*&gt;$/ contained containedin=gitLgLine</code></pre></td>
</tr>
<tr class="even">
<td align="left"><pre><code>hi def link gitLgGraph    </code></pre></td>
<td align="left"><pre><code>Comment</code></pre></td>
</tr>
<tr class="odd">
<td align="left"><pre><code>hi def link gitLgDate     </code></pre></td>
<td align="left"><pre><code>gitDate</code></pre></td>
</tr>
<tr class="even">
<td align="left"><pre><code>hi def link gitLgRefs     </code></pre></td>
<td align="left"><pre><code>gitReference</code></pre></td>
</tr>
<tr class="odd">
<td align="left"><pre><code>hi def link gitLgIdentity </code></pre></td>
<td align="left"><pre><code>gitIdentity</code></pre></td>
</tr>
</tbody>
</table>
</div>
<p>This is all pretty rudimentary, but it seems to do the job! If you change the format of <code>git lg</code>, these syntax highlighting rules would need to be updated as well. Here’s the end result in action:</p>
<center>
<img src="/posts/2018/04/06/graphical-log-with-vimfugitive/fugitive-lg.gif" title="The :Glg command in action" />
</center>
<p>Because the temporary buffer <code>vim-fugitive</code> creates for the output of <code>:Git!</code> commands is of filetype <code>git</code>, we get some of fugitive’s global shortcuts for free. This allows us to open the commit under the cursor with <code>&lt;C-w&gt;f</code>, and from there inspect the diffs for each file within.</p>
<p>It’s not perfect—some shortcuts are inexplicably unavailable, and it would be nice if <code>&lt;C-w&gt;f</code> worked anywhere in the line, rather than having to move the cursor over the SHA1 hash itself—but it’s pretty good considering how easy it was to set up!</p>

<div class="tagsinfo"><a href="/tags/vim/index.html">vim</a>, <a href="/tags/git/index.html">git</a></div>
]]></summary>
</entry>
<entry>
    <title>Nymphetamine Fix</title>
    <link href="http://dpwright.com/posts/2017/09/04/nymphetamine-fix/index.html" />
    <id>http://dpwright.com/posts/2017/09/04/nymphetamine-fix/index.html</id>
    <published>2017-09-04T13:25:00Z</published>
    <updated>2017-09-04T13:25:00Z</updated>
    <summary type="html"><![CDATA[

<div class="info"> 4 September, 2017</div>

<p>I’ve been on a bit of a Cradle of Filth nostalgia rush recently, so I decided to write an arrangement of their song, <em>Nymphetamine Fix</em>, from the album of (almost) the same name, <em>Nymphetamine</em>. I’m still working on actually being able to <em>play</em> this arrangement, but I have got a MIDI rendering of it you can listen to here:</p>
<center>
<audio src="/posts/2017/09/04/nymphetamine-fix/nymphetamine-fix.mp3" controls />
</center>
<p>I should note that I didn’t just do this by ear (which I’m rubbish at); I made the use of the following resources while I was arranging it:</p>
<ul>
<li><a href="https://www.songsterr.com/a/wsa/cradle-of-filth-nymphetamine-tab-g-s3838">Nymphetamine tab on Songsterr</a>, which I used to get a basic feel for the song, and</li>
<li><a href="https://www.scribd.com/doc/7847913/Cradle-of-Filth-NymphEtaMine-piano">Christine Palethorpe’s piano arrangement</a>, which was especially useful for getting the vocal melodies, as well as some other nice bits which I brazenly stole. There is a <a href="https://www.youtube.com/watch?v=7NaecpN11l8">recording of this piano arrangement on her YouTube channel</a> which is definitely worth checking out.</li>
</ul>
<p>You can download versions engraved in traditional notation, tablature, or both below:</p>
<center>
<a href="/posts/2017/09/04/nymphetamine-fix/nymphetamine-fix.pdf">
<figure style="display: inline-block;">
<img src="/posts/2017/09/04/nymphetamine-fix/both.jpg" alt="Nymphetamine Fix" />
<figcaption>
Traditional and Tab
</figcaption>
</figure>
</a> <a href="/posts/2017/09/04/nymphetamine-fix/nymphetamine-fix-traditional.pdf">
<figure style="display: inline-block;">
<img src="/posts/2017/09/04/nymphetamine-fix/traditional.jpg" alt="Nymphetamine Fix (Traditional Notation)" />
<figcaption>
Traditional Only
</figcaption>
</figure>
</a> <a href="/posts/2017/09/04/nymphetamine-fix/nymphetamine-fix-tab.pdf">
<figure style="display: inline-block;">
<img src="/posts/2017/09/04/nymphetamine-fix/tab.jpg" alt="Nymphetamine Fix (Tablature)" />
<figcaption>
Tablature Only
</figcaption>
</figure>
</a>
</center>
<p>If you aren’t familiar with Cradle of Filth or their song <em>Nymphetamine Fix</em>, here’s the official video. It is a bit louder than the solo guitar version above.</p>
<center>
<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/6dW6aNAZGTM?rel=0" frameborder="0" style="max-width: 100%" allowfullscreen>
</iframe>
</center>

<div class="tagsinfo"><a href="/tags/guitar/index.html">guitar</a>, <a href="/tags/tablature/index.html">tablature</a>, <a href="/tags/lilypond/index.html">lilypond</a></div>
]]></summary>
</entry>
<entry>
    <title>Station 13 Podcast</title>
    <link href="http://dpwright.com/posts/2017/08/24/station-13-podcast/index.html" />
    <id>http://dpwright.com/posts/2017/08/24/station-13-podcast/index.html</id>
    <published>2017-08-24T06:37:52Z</published>
    <updated>2017-08-24T06:37:52Z</updated>
    <summary type="html"><![CDATA[

<div class="info">24 August, 2017</div>

<p>This site has lain fallow for a little while now, for a number of reasons, not least of which that I found myself in a pit of Cabal Hell which I didn’t get around to digging myself out of for two years. I have now switched the site, and its <code>.travis.yml</code> spec, over to stack, so I’m up and running again, and hopefully I’ll remember to post occasionally!</p>
<p>Anyway, just wanted to take the opportunity to plug one of my new projects, <a href="https://station13.fm">Station 13</a>.</p>
<p>Station 13 is a joint project between me and my good friend and former coworker, <a href="https://twitter.com/ATYPE808">Alex May</a>. We used to catch a train together when we were working in the videogames industry in Kyoto, Japan, and during those journeys we’d talk about anything and everything that caught our interest. We missed those train journeys, so we decided to recreate them, and to record them so anybody else who might be interested could also listen!</p>
<p>It isn’t a programming podcast (Alex is an audio engineer, not a programmer), and it isn’t a podcast about video games or about living in Japan, although we do talk about those things sometimes. It isn’t exclusively a tech podcast either, although given the nature of our shared interests tech topics do tend to come up quite often! Some of the things we’ve talked about so far:</p>
<ul>
<li>Switching from GMail to FastMail</li>
<li>Bitsummit and the Japanese indie games scene</li>
<li>Superhero comics, Greek Mythology, and the Silmarillion</li>
<li>Standing desks and open offices</li>
<li>Security and the benefits of using a password manager</li>
<li>Mechanical watches</li>
<li>What it’s like to work in industrial design</li>
<li>Flying business and first class</li>
</ul>
<p>If this range of topics sounds appealing to you, please subscribe! It should be listed in your favourite podcast player’s directory (<a href="https://twitter.com/danielpwright">please let me know</a> if it isn’t), or you can visit the website below. Thanks!</p>
<center>
<a href="https://station13.fm"><img src="/posts/2017/08/24/station-13-podcast/station-13.jpg" alt="Station 13" /></a>
</center>

<div class="tagsinfo"><a href="/tags/Station%2013/index.html">Station 13</a>, <a href="/tags/podcasts/index.html">podcasts</a></div>
]]></summary>
</entry>
<entry>
    <title>Generating this website part 8</title>
    <link href="http://dpwright.com/posts/2017/08/02/generating-this-website-part-8-crossposting/index.html" />
    <id>http://dpwright.com/posts/2017/08/02/generating-this-website-part-8-crossposting/index.html</id>
    <published>2017-08-02T20:09:00Z</published>
    <updated>2017-08-02T20:09:00Z</updated>
    <summary type="html"><![CDATA[

<div class="info"> 2 August, 2017</div>

<div class="sidenote">
<p>This is part eight of the “generating this website” series. To read the rest of the series, go to the series index <a href="/tags/generating%20this%20website">here</a></p>
</div>
<p>Occasionally (very occasionally in fact – this has only happened once!) I write something which is intended to be cross-posted to another site as well as being hosted on my own. I did this with my post on <a href="/posts/2013/08/21/writing-a-tcp-server-in-haskell-using-proxies-and-pipes">proxies and pipes</a>, which was also pretty much the first bit of Haskell code I put out, and is probably hopelessly outdated by this point, but there it is.</p>
<p>The idea here is that I want to be able to write a post on my site as usual, but also have it uploaded to the site that I’m contributing to. I have another script which deals with uploading the post to WordPress, so all this part of the generator has to do is add a header to the top of the post linking to the other version of the site.</p>
<p>Let’s begin with the standard fluff…</p>
<div class="elastic-tabstops">
<table>
<colgroup>
<col width="100%" />
</colgroup>
<tbody>
<tr class="odd">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span> <span class="ot">{-# LANGUAGE OverloadedStrings #-}</span></code></pre></div></td>
</tr>
<tr class="even">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span> <span class="ot">{-# LANGUAGE UnicodeSyntax #-}</span></code></pre></div></td>
</tr>
<tr class="odd">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span> <span class="kw">module</span> <span class="dt">Crossposting</span> <span class="kw">where</span></code></pre></div></td>
</tr>
<tr class="even">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span> <span class="kw">import </span><span class="dt">Prelude.Unicode</span></code></pre></div></td>
</tr>
<tr class="odd">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span> <span class="kw">import </span><span class="dt">Control.Monad.Unicode</span></code></pre></div></td>
</tr>
<tr class="even">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span> <span class="kw">import </span><span class="dt">Hakyll</span></code></pre></div></td>
</tr>
</tbody>
</table>
</div>
<p>All this module really does is expose a function, <code>crosspostField</code>, which returns the content of the header we want to insert at the top of the page if it’s a crosspost. This is fed into the template for <a href="/posts/2014/09/29/generating-this-website-part-2-posts">posts</a>.</p>
<div class="elastic-tabstops">
<table>
<colgroup>
<col width="100%" />
</colgroup>
<tbody>
<tr class="odd">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt; crosspostField ::</span> <span class="dt">String</span> <span class="ot">→</span> <span class="dt">Context</span> a</code></pre></div></td>
</tr>
<tr class="even">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span> crosspostField key <span class="fu">=</span> field key <span class="fu">$</span> getCrosspostHeader key ∘ itemIdentifier</code></pre></div></td>
</tr>
</tbody>
</table>
</div>
<p>The idea behind this is to extract the field identified by <code>key</code> from the metadata at the top of the post file, and pass it off to <code>getCrosspostHeader</code> to turn into a header body. The job of this function, then, is to look in the <code>templates/xp/</code> folder for a template file whose name matches the value of the field, render that template if found, and return it – otherwise we return an empty string. This is given below.</p>
<div class="elastic-tabstops">
<table>
<colgroup>
<col width="100%" />
</colgroup>
<tbody>
<tr class="odd">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt; getCrosspostHeader ::</span> <span class="dt">String</span> <span class="ot">→</span> <span class="dt">Identifier</span> <span class="ot">→</span> <span class="dt">Compiler</span> <span class="dt">String</span></code></pre></div></td>
</tr>
<tr class="even">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span> getCrosspostHeader key n <span class="fu">=</span> getMetadata n ≫<span class="fu">=</span> toHeader ∘ lookupString key</code></pre></div></td>
</tr>
</tbody>
</table>
<table>
<colgroup>
<col width="0%" />
<col width="100%" />
</colgroup>
<tbody>
<tr class="odd">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span>   <span class="kw">where</span> loadHeader        </code></pre></div></td>
<td align="left"><div class="sourceCode"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span class="fu">=</span> fmap itemBody ∘ header</code></pre></div></td>
</tr>
<tr class="even">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span>         toHeader          </code></pre></div></td>
<td align="left"><div class="sourceCode"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span class="fu">=</span> maybe (return <span class="st">&quot;&quot;</span>) loadHeader</code></pre></div></td>
</tr>
<tr class="odd">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span>         header name       </code></pre></div></td>
<td align="left"><div class="sourceCode"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span class="fu">=</span> makeItem <span class="st">&quot;&quot;</span></code></pre></div></td>
</tr>
<tr class="even">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span>                           </code></pre></div></td>
<td align="left"><div class="sourceCode"><pre class="sourceCode haskell"><code class="sourceCode haskell">≫<span class="fu">=</span> loadAndApplyTemplate (templatePath name) xpContext</code></pre></div></td>
</tr>
<tr class="odd">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span>         templatePath name </code></pre></div></td>
<td align="left"><div class="sourceCode"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span class="fu">=</span> fromFilePath <span class="fu">$</span> <span class="st">&quot;templates/xp/&quot;</span> <span class="fu">++</span> name <span class="fu">++</span> <span class="st">&quot;.html&quot;</span></code></pre></div></td>
</tr>
<tr class="even">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span>         xpContext         </code></pre></div></td>
<td align="left"><div class="sourceCode"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span class="fu">=</span> defaultContext</code></pre></div></td>
</tr>
</tbody>
</table>
</div>
<p>Note that the header itself is a template, rendered using the <code>defaultContext</code> context. This means it has access to other fields in the post’s metadata – useful if you want to link to the other version of the site, as you can put its URL or ID into the metadata.</p>

<div class="tagsinfo"><a href="/tags/hakyll/index.html">hakyll</a>, <a href="/tags/literate-programs/index.html">literate-programs</a>, <a href="/tags/generating%20this%20website/index.html">generating this website</a></div>
]]></summary>
</entry>
<entry>
    <title>Generating this website part 8</title>
    <link href="http://dpwright.com/posts/2017/08/02/generating-this-website-part-8/index.html" />
    <id>http://dpwright.com/posts/2017/08/02/generating-this-website-part-8/index.html</id>
    <published>2017-08-02T20:09:00Z</published>
    <updated>2017-08-02T20:09:00Z</updated>
    <summary type="html"><![CDATA[

<div class="info"> 2 August, 2017</div>

<div class="sidenote">
<p>This is part eight of the “generating this website” series. To read the rest of the series, go to the series index <a href="/tags/generating%20this%20website">here</a></p>
</div>
<p>Occasionally (very occasionally in fact – this has only happened once!) I write something which is intended to be cross-posted to another site as well as being hosted on my own. I did this with my post on <a href="/posts/2013/08/21/writing-a-tcp-server-in-haskell-using-proxies-and-pipes">proxies and pipes</a>, which was also pretty much the first bit of Haskell code I put out, and is probably hopelessly outdated by this point, but there it is.</p>
<p>The idea here is that I want to be able to write a post on my site as usual, but also have it uploaded to the site that I’m contributing to. I have another script which deals with uploading the post to WordPress, so all this part of the generator has to do is add a header to the top of the post linking to the other version of the site.</p>
<p>Let’s begin with the standard fluff…</p>
<div class="elastic-tabstops">
<table>
<colgroup>
<col width="100%" />
</colgroup>
<tbody>
<tr class="odd">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span> <span class="ot">{-# LANGUAGE OverloadedStrings #-}</span></code></pre></div></td>
</tr>
<tr class="even">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span> <span class="ot">{-# LANGUAGE UnicodeSyntax #-}</span></code></pre></div></td>
</tr>
<tr class="odd">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span> <span class="kw">module</span> <span class="dt">Crossposting</span> <span class="kw">where</span></code></pre></div></td>
</tr>
<tr class="even">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span> <span class="kw">import </span><span class="dt">Prelude.Unicode</span></code></pre></div></td>
</tr>
<tr class="odd">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span> <span class="kw">import </span><span class="dt">Control.Monad.Unicode</span></code></pre></div></td>
</tr>
<tr class="even">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span> <span class="kw">import </span><span class="dt">Hakyll</span></code></pre></div></td>
</tr>
</tbody>
</table>
</div>
<p>All this module really does is expose a function, <code>crosspostField</code>, which returns the content of the header we want to insert at the top of the page if it’s a crosspost. This is fed into the template for <a href="/posts/2014/09/29/generating-this-website-part-2-posts">posts</a>.</p>
<div class="elastic-tabstops">
<table>
<colgroup>
<col width="100%" />
</colgroup>
<tbody>
<tr class="odd">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt; crosspostField ::</span> <span class="dt">String</span> <span class="ot">→</span> <span class="dt">Context</span> a</code></pre></div></td>
</tr>
<tr class="even">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span> crosspostField key <span class="fu">=</span> field key <span class="fu">$</span> getCrosspostHeader key ∘ itemIdentifier</code></pre></div></td>
</tr>
</tbody>
</table>
</div>
<p>The idea behind this is to extract the field identified by <code>key</code> from the metadata at the top of the post file, and pass it off to <code>getCrosspostHeader</code> to turn into a header body. The job of this function, then, is to look in the <code>templates/xp/</code> folder for a template file whose name matches the value of the field, render that template if found, and return it – otherwise we return an empty string. This is given below.</p>
<div class="elastic-tabstops">
<table>
<colgroup>
<col width="100%" />
</colgroup>
<tbody>
<tr class="odd">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt; getCrosspostHeader ::</span> <span class="dt">String</span> <span class="ot">→</span> <span class="dt">Identifier</span> <span class="ot">→</span> <span class="dt">Compiler</span> <span class="dt">String</span></code></pre></div></td>
</tr>
<tr class="even">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span> getCrosspostHeader key n <span class="fu">=</span> getMetadata n ≫<span class="fu">=</span> toHeader ∘ lookupString key</code></pre></div></td>
</tr>
</tbody>
</table>
<table>
<colgroup>
<col width="0%" />
<col width="100%" />
</colgroup>
<tbody>
<tr class="odd">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span>   <span class="kw">where</span> loadHeader        </code></pre></div></td>
<td align="left"><div class="sourceCode"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span class="fu">=</span> fmap itemBody ∘ header</code></pre></div></td>
</tr>
<tr class="even">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span>         toHeader          </code></pre></div></td>
<td align="left"><div class="sourceCode"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span class="fu">=</span> maybe (return <span class="st">&quot;&quot;</span>) loadHeader</code></pre></div></td>
</tr>
<tr class="odd">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span>         header name       </code></pre></div></td>
<td align="left"><div class="sourceCode"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span class="fu">=</span> makeItem <span class="st">&quot;&quot;</span></code></pre></div></td>
</tr>
<tr class="even">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span>                           </code></pre></div></td>
<td align="left"><div class="sourceCode"><pre class="sourceCode haskell"><code class="sourceCode haskell">≫<span class="fu">=</span> loadAndApplyTemplate (templatePath name) xpContext</code></pre></div></td>
</tr>
<tr class="odd">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span>         templatePath name </code></pre></div></td>
<td align="left"><div class="sourceCode"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span class="fu">=</span> fromFilePath <span class="fu">$</span> <span class="st">&quot;templates/xp/&quot;</span> <span class="fu">++</span> name <span class="fu">++</span> <span class="st">&quot;.html&quot;</span></code></pre></div></td>
</tr>
<tr class="even">
<td align="left"><div class="sourceCode"><pre class="sourceCode literate literatehaskell"><code class="sourceCode literatehaskell"><span class="ot">&gt;</span>         xpContext         </code></pre></div></td>
<td align="left"><div class="sourceCode"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span class="fu">=</span> defaultContext</code></pre></div></td>
</tr>
</tbody>
</table>
</div>
<p>Note that the header itself is a template, rendered using the <code>defaultContext</code> context. This means it has access to other fields in the post’s metadata – useful if you want to link to the other version of the site, as you can put its URL or ID into the metadata.</p>

<div class="tagsinfo"><a href="/tags/hakyll/index.html">hakyll</a>, <a href="/tags/literate-programs/index.html">literate-programs</a>, <a href="/tags/generating%20this%20website/index.html">generating this website</a></div>
]]></summary>
</entry>

</feed>
